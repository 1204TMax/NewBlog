<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.po.Blog">
    <id column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="blog_keyword" jdbcType="VARCHAR" property="blogKeyword" />
    <result column="blog_description" jdbcType="VARCHAR" property="blogDescription" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="blog_content" jdbcType="VARCHAR" property="blogContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blog_id, blog_keyword, blog_description, blog_title, user_id, blog_content
  </sql>
  <select id="selectByExample" parameterType="com.po.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.po.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.po.Blog">
    insert into blog (blog_id, blog_keyword, blog_description, 
      blog_title, user_id, blog_content
      )
    values (#{blogId,jdbcType=INTEGER}, #{blogKeyword,jdbcType=VARCHAR}, #{blogDescription,jdbcType=VARCHAR}, 
      #{blogTitle,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{blogContent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.po.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,   
      </if>
      <if test="blogKeyword != null">
        blog_keyword,
      </if>
      <if test="blogDescription != null">
        blog_description,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="blogKeyword != null">
        #{blogKeyword,jdbcType=VARCHAR},
      </if>
      <if test="blogDescription != null">
        #{blogDescription,jdbcType=VARCHAR},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.po.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        blog_id = #{record.blogId,jdbcType=INTEGER},
      </if>
      <if test="record.blogKeyword != null">
        blog_keyword = #{record.blogKeyword,jdbcType=VARCHAR},
      </if>
      <if test="record.blogDescription != null">
        blog_description = #{record.blogDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.blogTitle != null">
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.blogContent != null">
        blog_content = #{record.blogContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set blog_id = #{record.blogId,jdbcType=INTEGER},
      blog_keyword = #{record.blogKeyword,jdbcType=VARCHAR},
      blog_description = #{record.blogDescription,jdbcType=VARCHAR},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      blog_content = #{record.blogContent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.po.Blog">
    update blog
    <set>
      <if test="blogKeyword != null">
        blog_keyword = #{blogKeyword,jdbcType=VARCHAR},
      </if>
      <if test="blogDescription != null">
        blog_description = #{blogDescription,jdbcType=VARCHAR},
      </if>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=VARCHAR},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.po.Blog">
    update blog
    set blog_keyword = #{blogKeyword,jdbcType=VARCHAR},
      blog_description = #{blogDescription,jdbcType=VARCHAR},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      blog_content = #{blogContent,jdbcType=VARCHAR}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
 <insert id="insertblog" parameterType="com.po.Blog">
    insert into blog(blog_keyword,blog_description,blog_title,blog_content,user_id) VALUE(#{blogKeyword},#{blogDescription},#{blogTitle}, #{blogContent},#{userId})
  </insert>
  <select id="searchmaxblogid" resultType="Integer">
  SELECT max(blog_id) FROM blog
  </select>
</mapper>